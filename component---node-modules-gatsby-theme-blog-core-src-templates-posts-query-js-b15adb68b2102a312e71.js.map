{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-blog/src/components/home-footer.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-link.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-list.js","webpack:///./node_modules/gatsby-theme-blog/src/components/posts.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/posts.js","webpack:///./node_modules/gatsby-theme-blog/src/components/seo.js"],"names":["Footer","socialLinks","css","mt","pt","Date","getFullYear","a","href","map","platform","i","arr","key","url","target","rel","name","length","PostLink","title","slug","date","excerpt","h2","sx","mb","as","Link","textDecoration","to","p","PostList","posts","node","Posts","location","siteTitle","query","PostsPage","data","site","allBlogPost","edges","siteMetadata","social","SEO","description","lang","meta","keywords","imageSource","imageAlt","metaDescription","image","siteUrl","imageAltText","htmlAttributes","titleTemplate","content","property","author","concat","join","defaultProps"],"mappings":"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","file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-b15adb68b2102a312e71.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { Styled, css } from \"theme-ui\"\n\nconst Footer = ({ socialLinks }) => (\n  <footer\n    css={css({\n      mt: 4,\n      pt: 3,\n    })}\n  >\n    Â© {new Date().getFullYear()}, Powered by\n    {` `}\n    <Styled.a href=\"https://www.gatsbyjs.org\">Gatsby</Styled.a>\n    {` `}&bull;{` `}\n    {socialLinks\n      ? socialLinks.map((platform, i, arr) => (\n          <Fragment key={platform.url}>\n            <Styled.a\n              href={platform.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {platform.name}\n            </Styled.a>\n            {arr.length - 1 !== i && (\n              <Fragment>\n                {` `}&bull;{` `}\n              </Fragment>\n            )}\n          </Fragment>\n        ))\n      : null}\n  </footer>\n)\nexport default Footer\n","/** @jsx jsx */\nimport { Styled, jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ title, slug, date, excerpt }) => (\n  <div>\n    <Styled.h2\n      sx={{\n        mb: 1,\n      }}\n    >\n      <Styled.a\n        as={Link}\n        sx={{\n          textDecoration: `none`,\n        }}\n        to={slug}\n      >\n        {title || slug}\n      </Styled.a>\n    </Styled.h2>\n    <small>{date}</small>\n    <Styled.p>{excerpt}</Styled.p>\n  </div>\n)\n\nexport default PostLink\n","import React from \"react\"\n\nimport PostLink from \"./post-link\"\n\nconst PostList = ({ posts }) => (\n  <>\n    {posts.map(({ node }) => (\n      <PostLink key={node.slug} {...node} />\n    ))}\n  </>\n)\n\nexport default PostList\n","import React from \"react\"\n\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport Footer from \"./home-footer\"\nimport PostList from \"./post-list\"\n\nconst Posts = ({ location, posts, siteTitle, socialLinks }) => (\n  <Layout location={location} title={siteTitle}>\n    <SEO title=\"Home\" />\n    <main>\n      <PostList posts={posts} />\n    </main>\n    <Footer socialLinks={socialLinks} />\n  </Layout>\n)\n\nexport default Posts\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(sort: { fields: [date, title], order: DESC }, limit: 1000) {\n      edges {\n        node {\n          id\n          excerpt\n          slug\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          tags\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Posts from \"../../components/posts\"\n\nexport default ({ location, data }) => {\n  const { site, allBlogPost } = data\n  return (\n    <Posts\n      location={location}\n      posts={allBlogPost.edges}\n      siteTitle={site.siteMetadata.title}\n      socialLinks={site.siteMetadata.social}\n    />\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  keywords = [],\n  title,\n  imageSource,\n  imageAlt,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const image = imageSource\n    ? `${site.siteMetadata.siteUrl}${imageSource}`\n    : null\n  const imageAltText = imageAlt || metaDescription\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: `og:image`,\n          content: image,\n        },\n        {\n          name: `og:image:alt`,\n          content: imageAltText,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:image`,\n          content: image,\n        },\n        {\n          name: `twitter:image:alt`,\n          content: imageAltText,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  imageSource: PropTypes.string,\n}\n\nexport default SEO\n"],"sourceRoot":""}